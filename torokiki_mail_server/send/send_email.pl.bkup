#
#
#


use Email::MIME::Creator;



#
# These functions return text for use in sending to emails.
#

sub &comms::slurp_file($)
{
	my $filename = $_[0];

	my $file_text;


	open FILE, "<", $file_name 
			or warn "Error. Couldn't open $file_name.\n"
			and return undef;
	{
	local $/ = undef;   # read all of file
	$file_text = <FILE>;
	}
	close FILE;

	return $file_text;
}


sub comms::create_response_to_falied_reply_txt()
{
	my $filename = "comms/create_response_to_succeeded_reply.txt";
	open FILE, "<", $file_name or warn "Error. Couldn't open $file_name.\n";
	{
	local $/ = undef;   # read all of file
	$file_text = <FILE>;
	}
	close FILE;
}


sub comms::create_response_to_succeeded_reply_txt()
{
	my $filename = "comms/create_response_to_succeeded_reply.txt";
	open FILE, "<", $file_name or warn "Error. Couldn't open $file_name.\n";
	{
	local $/ = undef;   # read all of file
	}
	close FILE;
}


	my $filename = "comms/get_failed_reply.txt";
	open FILE, "<", $file_name or warn "Error. Couldn't open $file_name.\n";
	{
	local $/ = undef;   # read all of file
	$comms::get_failed_reply_txt = <FILE>;
	}
	close FILE;
}


sub comms::get_succeeded_reply_txt()
{
	my $filename = "comms/get_succeeded_reply.txt";
	open FILE, "<", $file_name or warn "Error. Couldn't open $file_name.\n";
	{
	local $/ = undef;   # read all of file
	}
	close FILE;
}


sub comms::invalid_mail_reply_txt()
{
	my $filename = "comms/invalid_mail_reply.txt";
	open FILE, "<", $file_name or warn "Error. Couldn't open $file_name.\n";
	{
	local $/ = undef;   # read all of file
	}
	close FILE;
}


#
# These functions send emails. 
#

sub comms::send_invalid_mail_reply($)
{
	$eml_mime = $_[0];


	my $file_text = &comms::slurp_file("comms/create_response_to_falied_reply.txt");

	unless ($file_text)
	{ 
		warn "comms::send_invalid_mail_reply(): Email not sent.\n";
		return undef;
	 }

	my $rtn = &comms::send_text_email(
		$eml_mime->header(From),
		"error: 'invalid-email-format'",
		$file_text
	);

	if ($rtn)
	{
		return $rtn;
	}
	else
	{ 
		warn "comms::send_invalid_mail_reply(): Email not sent.\n";
		return undef;
	}
}



sub comms::send_text_email()
{
	my $to		= $_[0];
	my $subj	= $_[1];
	my $text	= $_[2];


    my $email = Email::MIME->create(
        header => [ 
#				From => 'casey@geeknest.com',
				To => $to,
				Subject => $subj,
		],
		body => $text,
	);

	return &comm::send_email_mime_obj($email);
}


sub comms::send_invalid_mail_reply($)
{
	$eml_mime = $_[0];


	my $file_text = &comms::slurp_file("comms/create_response_to_falied_reply.txt");

	unless ($file_text)
	{ 
		warn "comms::send_invalid_mail_reply(): Email not sent\n";
		return undef;
	 }


    my $email = Email::MIME->create(
        header => [ 
#				From => 'casey@geeknest.com',
				To => $eml_mime->header(From),
				Subject => "error: 'invalid-email-format'",
		],
		body => $comm::invalid_mail_reply_txt,
	);

	return &comm::send_email_mime_obj($email);
}


sub comms::send_get_succeeded_reply($$)
{
	$eml_mime = $_[0];
	$returned_content = $_[1];


    my $email = Email::MIME->create(
        header => [ 
#				From => 'casey@geeknest.com',
				To => $eml_mime->header(From),
				Subject => "msg: 'get-succedded'",
		],
		body => $comm::get_succeeded_reply_txt,

	return 1;
}


sub comms::send_get_failed_reply($)
{
	$eml_mime = $_[0];


    my $email = Email::MIME->create(
        header => [ 
#				From => 'casey@geeknest.com',
				To => $eml_mime->header(From),
				Subject => "error: 'get-failed'",
		],
		body => $comm::get_failed_reply_txt,

	return 1;
}


sub comms::send_create_response_to_succeeded_reply($$)
{
	$eml_mime = $_[0];
	$returned_content = $_[1];


    my $email = Email::MIME->create(
        header => [ 
#				From => 'casey@geeknest.com',
				To => $eml_mime->header(From),
				Subject => "msg: 'create-response-to-succeeded'",
		],
		body => $comm::create_response_to_succeeded_reply_txt,
	)

	return 1;
}


sub comms::send_create_response_to_falied_reply($)
{
	$eml_mime = $_[0];


    my $email = Email::MIME->create(
        header => [ 
#				From => 'casey@geeknest.com',
				To => $eml_mime->header(From),
				Subject => "error: 'create-response-to-failed'",
		],
		body => $comm::create_response_to_falied_reply_txt,
    );



	return 1;
}


sub comm::send_email_mime_obj($)
{
    my $email = $_[0]	# shoud be a ref to an Email::MIME object.


	my $rtn;
	$rtn = open MSMTP, "| msmtp --read-recipients -C msmtp.torokiki.conf" 
	unless ($rtn)
	{ 
		warn "Error. Can't fork msmtp: $!\n"; 
		return undef;
	}

	print MSMTP $email->as_string;

	$rtn = close MSMTP;
	unless ($rtn)
	{ 
		warn "Error closing msmtp pipe: $!\n";
		if ($? & 128)
			{ warn "msmtp exited with signal: ".$?&127.">\n";
		warn "msmtp returned: ".$?>>8.">\n";

		# Keep a record of fails, just in case. 
		&stash::stash_failed_send($email->as_string);

		return undef;
	}

	return 1;
}


1;
