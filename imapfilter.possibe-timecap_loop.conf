


---------------
--  Account  --
---------------

timecapsuletesting = IMAP {
	server = 'imap.googlemail.com',
	username = 'time.capsule.testing@gmail.com',
	password = 'porcorosso',
	ssl = 'ssl3',
}


---------------
--  Options  --
---------------

--options.timeout = 120
--options.subscribe = true


--------------------------
--  Mailbox processing  --
--------------------------

function exists(filename)
	local file = io.open(filename)
	if file then
		io.close(file)
		return true
	else
		return false
	end
end

function get_unique_filename()
	local filename
	repeat
		filename = string.format("message.%d", math.random(0,1000000) )
	until not exists(filename)

	return filename
end

function sleep(n)  -- seconds
	local t0 = os.clock()
	while os.clock() - t0 <= n 
	do 
	end
end


--messages = timecapsuletesting.INBOX:contain_subject('time-capsule')
--messages = timecapsuletesting.INBOX:match_subject('.*')

-- exist, unread, unseen = myaccount.mymailbox:check_status()

local loop_count = 0
while true
do
	loop_count = loop_count+1

	message_list = timecapsuletesting.INBOX:select_all()

	messages = timecapsuletesting.INBOX:fetch_message(message_list)
	bodies = timecapsuletesting.INBOX:fetch_body(message_list)
	headers = timecapsuletesting.INBOX:fetch_header(message_list)

	for key,value in ipairs(messages) 
	do 

		print("================")
		print(key) 

		-- Save message
		local filename = get_unique_filename()
		local outfile = io.open(filename, "w")
		outfile:write(messages[key])
		io.close(outfile)

		-- Process it.
		local cmd = string.format("./timecap_grok.pl %s", filename)
		local cmd_rtn = os.execute(cmd)

	end
end



------ + and, * or, - not
----         unseen = myaccount.myaccount:is_unseen()
----         larger = myaccount.mymailbox:is_larger(100000)
----         subject = myaccount.mymailbox:contain_subject(’test’)
----         messages = unseen + larger * subject
--
--status = pipe_to('cat -', fields)
--
----------------------------------
--
--     expunge
--             Normally, messages are marked for deletion and are actually
--             deleted when the mailbox is closed.  When this option is enabled,
--             messages are expunged immediately after being marked deleted.
--             This variable takes a boolean as a value.  Default is ‘‘true’’.
--
--
--     delete_messages(messages)
--             Deletes the messages (table).
--
--
--     mark_deleted(messages)
--             Marks messages (table) for later removal.
--
