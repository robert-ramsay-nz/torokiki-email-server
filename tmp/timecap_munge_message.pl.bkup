#!/usr/bin/perl


# ---------------- Execution starts here ---------------- 

&main;


# ---------------- Functions ---------------- 

sub main()
{
	my @files;


#    # Extract the first command line options, then remove it.
#    foreach(@ARGV)
#    {
#        # Help message prints the script description 
#       if ($_ eq "--help" or $_ eq "-h")
#            { print `scriptdescr $0`; exit 0; }
##       elsif ($_ eq "-o")
##           { $open_in_browser = 1}
#        else
#            { push @files, $_; }
#        #-*)         echo "  Unknown argument:   $1" 1>&2; exit 1 ;;
#    }

    foreach (@ARGV)
    {
    	push @files, $_; 
    }

    foreach (@files)
    {
    	&process_email($_);
    }


}


sub process_email($)
{
	my $file = $_[0];
	my $file_txt;
	my ($body, $header);
	my %header_fields;
#	my @body_elements;


	open FILE, "<", $file;
    {
    local $/ = undef;   # read all of file
    $file_txt = <FILE>;
    }
	close FILE;

	($header, $body) = &split_body_and_header($file_txt);

		print "==================================\n";
		print "$header\n";
		print "==================================\n";
		print "$body\n";

	%header_fields = &extract_headers($header);
#	@body_elements = &extract_body_commands($body);
}


sub split_body_and_header($)
{
	my $file_txt = $_[0];
	my ($header, $body);

	# Split on the first empty line
	# Note the fact that a newlines can be \n or \r\n
	$file_txt =~ /(.*?)(\n|\r\n)(\n|\r\n)(.*)/s;
	$header =  $1;
	$body = $4;

	return ($header, $body);
}


sub extract_headers($)
{
	my @header_lines = split /\n/, $_[0], -1;
	my %headers;
	my $old_tag;

	for (@header_lines)
	{
		if (/(\S+?): (.*)/)
		{
			$headers{$1} = $2;
			$old_tag = $1;
		}
		else
		{
			$headers{$old_tag} .= "\n$_";
		}
	}

	return %headers;
}

sub extract_body_elements($)
{
	my $body = $_[0];
	my @elements;

	return @elements;
}





